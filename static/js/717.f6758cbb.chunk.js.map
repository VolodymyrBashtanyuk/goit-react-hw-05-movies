{"version":3,"file":"static/js/717.f6758cbb.chunk.js","mappings":"8QAEaA,EAAOC,EAAAA,GAAAA,GAAH,8RAaJC,EAAMD,EAAAA,GAAAA,IAAH,gDAIHE,EAAOF,EAAAA,GAAAA,EAAH,sE,SCbJG,EAAW,SAAC,GAAc,IAC/BC,EAD8B,EAAXC,KACNC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC7C,OACE,0BACoB,OAAjBA,GACC,SAACT,EAAD,CAAKU,IAAG,UARD,mCAQC,OAAgBD,GAAgBE,IAAKJ,KAE7C,SAACP,EAAD,CAAKU,IATC,oDASaE,MAAM,MAAMC,OAAO,MAAMF,IAAKJ,KAEnD,SAACN,EAAD,UAAOM,KACP,UAACN,EAAD,yBAAkBO,EAAlB,SAPOF,EAUZ,IACD,OAAO,SAACR,EAAD,UAAOK,GACf,ECaD,EA7Ba,WACX,OAAwBW,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAGRE,EAAAA,EAAAA,YAAU,WACRC,GAED,GAAE,IAEH,IAAMA,EAAS,mCAAG,8GAEeC,EAAAA,EAAAA,IAAQJ,EATzB,WAOE,OAERK,EAFQ,OAGdR,EAAQQ,GAHM,gDAKdN,GAAS,GALK,yDAAH,qDASf,OACE,gCACGD,IAAS,oDACA,OAATF,IAAiB,SAACb,EAAD,CAAUE,KAAMW,MAGvC,C,8LC9BKU,EAAW,+BACXC,EAAM,mCAGNC,EAAU,QAEHC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,YALR,mBAKQ,oBAA6CC,IAD3C,cACnBI,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAS,mCAAG,WAAM1B,GAAN,uFACAsB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,YATV,eASU,oBACYC,EADZ,iCACwCnB,EADxC,+BADA,cACjBuB,EADiB,yBAIhBA,EAASC,KAAKC,SAJE,2CAAH,sDAOTE,EAAU,mCAAG,WAAM5B,GAAN,uFACDuB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,YACNE,EADM,YACKrB,EADL,oBACmBoB,EADnB,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVR,EAAO,mCAAG,WAAOjB,EAAIyB,GAAX,uFACEF,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,YACNE,EADM,YACKrB,EADL,YACWyB,EADX,oBAC2BL,EAD3B,oBADF,cACfI,EADe,yBAIdA,EAASC,KAAKhB,MAJA,2CAAH,wDAOPoB,EAAU,mCAAG,WAAO7B,EAAIyB,GAAX,uFACDF,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,YACNE,EADM,YACKrB,EADL,YACWyB,EADX,oBAC2BL,EAD3B,oBADC,cAClBI,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,uD","sources":["components/Additionalnfo/Cast/CastListStyle.jsx","components/Additionalnfo/Cast/CastList.jsx","components/Additionalnfo/Cast/Cast.jsx","serviceApi/ServiceApi.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-weight: bold;\r\n  margin-bottom: 10px;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { List, Img, Text } from './CastListStyle';\r\n\r\nconst imageUrl = 'https://image.tmdb.org/t/p/w200';\r\nconst noImage = 'https://s3.amazonaws.com/PARTS.Images/NoImage.jpg';\r\n\r\nexport const CastList = ({ list }) => {\r\n  const items = list.map(({ id, name, character, profile_path }) => {\r\n    return (\r\n      <li key={id}>\r\n        {profile_path !== null ? (\r\n          <Img src={`${imageUrl}${profile_path}`} alt={name} />\r\n        ) : (\r\n          <Img src={noImage} width=\"300\" height=\"400\" alt={name} />\r\n        )}\r\n        <Text>{name}</Text>\r\n        <Text>Character: {character} </Text>\r\n      </li>\r\n    );\r\n  });\r\n  return <List>{items}</List>;\r\n};\r\n\r\nCastList.propTypes = {\r\n  list: PropTypes.arrayOf(PropTypes.object),\r\n  items: PropTypes.objectOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      character: PropTypes.string.isRequired,\r\n      profile_path: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ApiCast } from 'serviceApi/ServiceApi';\r\nimport { CastList } from './CastList';\r\n\r\nconst Cast = () => {\r\n  const [cast, setCast] = useState(null);\r\n  const [error, setError] = useState(false);\r\n\r\n  const { movieId } = useParams();\r\n  const credits = 'credits';\r\n\r\n  useEffect(() => {\r\n    fetchCast();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const fetchCast = async () => {\r\n    try {\r\n      const apiCastDetails = await ApiCast(movieId, credits);\r\n      setCast(apiCastDetails);\r\n    } catch (e) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && <p>Sorry ( please try again</p>}\r\n      {cast !== null && <CastList list={cast} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = '9d0cbfdf54c935b25322d86e1e3b7dd0';\r\nconst tranding = 'trending/all/day';\r\nconst search = 'search/movie';\r\nconst details = 'movie';\r\n\r\nexport const ApiTrending = async () => {\r\n  const responce = await axios.get(`${BASE_URL}/${tranding}?api_key=${KEY}`);\r\n  return responce.data.results;\r\n};\r\n\r\nexport const ApiSaerch = async name => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/${search}?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=true`\r\n  );\r\n  return responce.data.results;\r\n};\r\n\r\nexport const ApiDetails = async id => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/${details}/${id}?api_key=${KEY}&language=en-US`\r\n  );\r\n  return responce.data;\r\n};\r\n\r\nexport const ApiCast = async (id, data) => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/${details}/${id}/${data}?api_key=${KEY}&language=en-US`\r\n  );\r\n  return responce.data.cast;\r\n};\r\n\r\nexport const ApiReviews = async (id, data) => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/${details}/${id}/${data}?api_key=${KEY}&language=en-US`\r\n  );\r\n  return responce.data.results;\r\n};\r\n"],"names":["List","styled","Img","Text","CastList","items","list","map","id","name","character","profile_path","src","alt","width","height","useState","cast","setCast","error","setError","movieId","useParams","useEffect","fetchCast","ApiCast","apiCastDetails","BASE_URL","KEY","details","ApiTrending","axios","responce","data","results","ApiSaerch","ApiDetails","ApiReviews"],"sourceRoot":""}