{"version":3,"file":"static/js/83.1b4b03c7.chunk.js","mappings":"mNAGaA,EAAUC,EAAAA,GAAAA,GAAH,+CAIPC,EAAOD,EAAAA,GAAAA,GAAH,+CAIJE,GAAYF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,4e,SCPTI,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAOH,EAAMI,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAC5B,OACE,SAACV,EAAD,WACE,SAACC,EAAD,CAAWU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA/C,SACGK,KAFMD,EAMd,IAED,OACE,+BACE,SAACX,EAAD,UAAUS,KAGf,C,2JCpBYO,EAAQf,EAAAA,GAAAA,GAAH,uEAKLgB,EAAQhB,EAAAA,GAAAA,GAAH,6G,SC2BlB,EA7BiB,WACf,OAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACRC,GACD,GAAE,IACH,IAAMA,EAAY,mCAAG,8GAESC,EAAAA,EAAAA,MAFT,cAEXC,EAFW,yBAGVN,EAAUM,IAHA,gCAKjBJ,GAAS,GALQ,yDAAH,qDASlB,OACE,gCACqB,IAAlBH,EAAOQ,SACN,6BACE,SAACX,EAAD,8BACA,SAACX,EAAA,EAAD,CAAWC,MAAOa,OAGrBE,IAAS,SAACJ,EAAD,yCAGf,C,8LC9BKW,EAAW,+BACXC,EAAM,mCAGNC,EAAU,QAEHL,EAAW,mCAAG,oGACFM,EAAAA,EAAAA,IAAA,UAAaH,EAAb,YALR,mBAKQ,oBAA6CC,IAD3C,cACnBG,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAS,mCAAG,WAAMC,GAAN,uFACAL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,YATV,eASU,oBACYC,EADZ,iCACwCO,EADxC,+BADA,cACjBJ,EADiB,yBAIhBA,EAASC,KAAKC,SAJE,2CAAH,sDAOTG,EAAU,mCAAG,WAAM1B,GAAN,uFACDoB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,YACNE,EADM,YACKnB,EADL,oBACmBkB,EADnB,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAO,mCAAG,WAAO3B,EAAIsB,GAAX,uFACEF,EAAAA,EAAAA,IAAA,UAClBH,EADkB,YACNE,EADM,YACKnB,EADL,YACWsB,EADX,oBAC2BJ,EAD3B,oBADF,cACfG,EADe,yBAIdA,EAASC,KAAKM,MAJA,2CAAH,wDAOPC,EAAU,mCAAG,WAAO7B,EAAIsB,GAAX,uFACDF,EAAAA,EAAAA,IAAA,UAClBH,EADkB,YACNE,EADM,YACKnB,EADL,YACWsB,EADX,oBAC2BJ,EAD3B,oBADC,cAClBG,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,uD","sources":["components/MovieItem/MovieItemStyle.jsx","components/MovieItem/MovieItem.jsx","pages/HomePage/HomePageStyle.jsx","pages/HomePage/HomePage.jsx","serviceApi/ServiceApi.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Wrapper = styled.ul`\r\n  padding-left: 80px;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nexport const LinkStyle = styled(Link)`\r\n  font-size: 20px;\r\n  border-bottom: 1px solid black;\r\n  :hover {\r\n    color: #0a0a85;\r\n    font-size: 25px;\r\n    text-shadow: 1px 0px 1px #cccccc, 0px 1px 1px #eeeeee, 2px 1px 1px #cccccc,\r\n      1px 2px 1px #eeeeee, 3px 2px 1px #cccccc, 2px 3px 1px #eeeeee,\r\n      4px 3px 1px #cccccc, 3px 4px 1px #eeeeee, 5px 4px 1px #cccccc,\r\n      4px 5px 1px #eeeeee, 6px 5px 1px #cccccc, 5px 6px 1px #eeeeee,\r\n      7px 6px 1px #cccccc, 2px 2px 2px rgba(44, 23, 206, 0);\r\n  }\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Wrapper, Item, LinkStyle } from './MovieItemStyle';\r\n\r\nexport const MovieItem = ({ items }) => {\r\n  const location = useLocation();\r\n\r\n  const list = items.map(({ id, title }) => {\r\n    return (\r\n      <Item key={id}>\r\n        <LinkStyle to={`/movies/${id}`} state={{ from: location }}>\r\n          {title}\r\n        </LinkStyle>\r\n      </Item>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>{list}</Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nMovieItem.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.object),\r\n  list: PropTypes.objectOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n  margin-bottom: 20px;\r\n  padding-left: 80px;\r\n`;\r\n\r\nexport const Error = styled.h1`\r\n  text-align: center;\r\n  font-weight: bold;\r\n  color: #ff0000;\r\n  margin-top: 40px;\r\n`;\r\n","import { ApiTrending } from 'serviceApi/ServiceApi';\r\nimport { useState, useEffect } from 'react';\r\nimport { MovieItem } from 'components/MovieItem/MovieItem';\r\nimport { Error, Title } from './HomePageStyle';\r\n\r\nconst HomePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchTreding();\r\n  }, []);\r\n  const fetchTreding = async () => {\r\n    try {\r\n      const apiHomePage = await ApiTrending();\r\n      return setMovies(apiHomePage);\r\n    } catch (e) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movies.length !== 0 && (\r\n        <main>\r\n          <Title>Tredding today</Title>\r\n          <MovieItem items={movies} />\r\n        </main>\r\n      )}\r\n      {error && <Error>Please try one more time</Error>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\nconst KEY = '9d0cbfdf54c935b25322d86e1e3b7dd0';\r\nconst tranding = 'trending/all/day';\r\nconst search = 'search/movie';\r\nconst details = 'movie';\r\n\r\nexport const ApiTrending = async () => {\r\n  const responce = await axios.get(`${BASE_URL}/${tranding}?api_key=${KEY}`);\r\n  return responce.data.results;\r\n};\r\n\r\nexport const ApiSaerch = async name => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/${search}?api_key=${KEY}&language=en-US&query=${name}&page=1&include_adult=true`\r\n  );\r\n  return responce.data.results;\r\n};\r\n\r\nexport const ApiDetails = async id => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/${details}/${id}?api_key=${KEY}&language=en-US`\r\n  );\r\n  return responce.data;\r\n};\r\n\r\nexport const ApiCast = async (id, data) => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/${details}/${id}/${data}?api_key=${KEY}&language=en-US`\r\n  );\r\n  return responce.data.cast;\r\n};\r\n\r\nexport const ApiReviews = async (id, data) => {\r\n  const responce = await axios.get(\r\n    `${BASE_URL}/${details}/${id}/${data}?api_key=${KEY}&language=en-US`\r\n  );\r\n  return responce.data.results;\r\n};\r\n"],"names":["Wrapper","styled","Item","LinkStyle","Link","MovieItem","items","location","useLocation","list","map","id","title","to","state","from","Title","Error","useState","movies","setMovies","error","setError","useEffect","fetchTreding","ApiTrending","apiHomePage","length","BASE_URL","KEY","details","axios","responce","data","results","ApiSaerch","name","ApiDetails","ApiCast","cast","ApiReviews"],"sourceRoot":""}